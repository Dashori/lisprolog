#include <iostream>
#include <vector>

using namespace std;

// Вот он (по номерам лунок, откуда нужно делать каждый следующий ход): 3-4-2-3-4-1-4-2-3-4-Х.
int isWin(int n, vector<int> holes)
{
    for (int i = 0; i < n - 1; i++)
    {
        if (holes[i] != 0)
            return 0;
    }

    return 1;
}

void printHols(int n, vector<int> holes)
{
    for (int i = 0; i < n - 1; i++)
    {
        cout << holes[i] << " ";
    }
    // cout << endl;
    cout << "! " << holes[n - 1] << endl;
}

void shift(int n, vector<int> &holes, int k)
{
    cout << n << " " << k << endl;
    int need = holes[k - 1];
    holes[k - 1] = 0;

    for (int i = k; (i < n) && (need > 0); i++)
    {
        holes[i]++;
        need--;
    }

    printHols(n, holes);

    while (need > 0)
    {
        for (int i = 0; (i < n) && (need > 0); i++)
        {
            holes[i]++;
            need--;
        }
    }
}

int solve(int n, vector<int> holes)
{
//     cout << "\n\nРешение - номера лунок, откуда нужно делать ход:\n";
//     cout << "Ход 1: 3\n\
// Ход 2: 4\n\
// Ход 3: 2\n\
// Ход 4: 3\n\
// Ход 5: 4\n\
// Ход 6: 1\n\
// Ход 7: 4\n\
// Ход 8: 2\n\
// Ход 9: 3\n\
// Ход 10: 4\n";

    if (isWin(n, holes))
        return 0;
    
    for (int i = 0; i < n - 1; i++)
    {
        if (holes[i] != 0) // choose first hole with stones
        {

        }

    }

    return 1;
}

// vector<int> shift (int n, vector<int> holes)
// {
//     int shift = 3;
//     vector<int> newHoles(n);
//     for (int i = 0; i < n; i++)
//     {
//         newHoles[i] = holes[(i + shift) % n];
//     }

//     return newHoles;
// }


int main()
{
    cout << "Чука Рума - редчайшая разновидность однорядной манкалы для одного игрока.\n\n";
    cout << "Правила игры:\n\
Есть n маленьких лунок, расположенных слева направо. Справа от лунок есть большая лунка - Дом.\n\
В каждой из лунок есть k камней (семен). Для хода игрок берёт все камни из любой лунки и раскладывает их\n\
по одному в каждую лунку слева направо, по направлению к Дому, не пропуская ни одной.\n\
Цель игры состоит в том, чтобы перенести ВСЕ камни в Дом.\n\n\
При посеве:\n\
- если последний камень при посеве падает в пустую лунку, игра заканчивается, пасьянс не сошёлся;\n\
- если последний камень падает в непустую лунку, игрок берёт все камни из этой лунки и продолжает посев\n\
в том же направлении, начиная со следующей лунки;\n\
- если камень падает в Дом, и в руке остались камни, посев продолжается с первой лунки слева.\n\
- если посев заканчивается в Доме, игрок может начать новый посев камнями из любой маленькой лунки;\n\n";

    int n;

    cout << "Введите количество лунок: ";
    cin >> n;

    n++;

    vector<int> holes(n);

    for (int i = 0; i < n - 1; i++)
    {
        cout << "Введите количество камней в " << i + 1 << " лунке: ";
        cin >> holes[i];
    }

    printHols(n, holes);

    // solve(n, holes);
    shift(n, holes, 4);

    printHols(n, holes);


    // vector<int> newHoles = shift(n, holes);
    // printHols(n, newHoles);

    return 0;
}


//  В начале игры в каждую из четырёх маленьких лунок помещают по два камня. Для хода игрок берёт все семена из любой лунки и раскладывает их по одному в каждую лунку слева направо, по направлению к Дому, не пропуская ни одной.
//    Если последний камень падает в Дом, и в руке остались семена, посев продолжается с первой лунки слева (в круговом варианте - дальше по кругу).
//    Если последний камень падает в непустую лунку, игрок берёт все камни из этой лунки и продолжает посев в том же направлении, начиная со следующей лунки. 
//    Если посев заканчивается в Доме, игрок может начать новый посев камнями из любой маленькой лунки.
//    Если же последний камень при посеве падает в пустую лунку, игра заканчивается, пасьянс не сошёлся :(.
//    Цель игры состоит в том, чтобы перенести ВСЕ семена в Дом. Это выигрыш :).